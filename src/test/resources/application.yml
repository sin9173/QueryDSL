spring:
  profiles:
    active: test
  datasource:
    url: jdbc:mysql://localhost:3306/querydsl
    username: root
    password: dudwhg1!@
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        #show_sql: true
        format_sql: true

        #LAZY(지연로딩) 시 in 조건으로 SQL 을 통합
        #엔티티에서 적용할 객체에 @BatchSize(size = ?) 으로 직접 적용할 수 있음
        # 1000 이 Maximum 값
        default_batch_fetch_size: 100

        #OSIV (Open Session In View) : 기본값 true
        # DB 커넥션과 영속성컨텍스트의 반환시점을 설정

        #커넥션 획득 시점
        # - 트랜젝션이 시작이 될 떄 DB 커넥션을 획득

        #OSIV 가 true 일 경우
        # - 트랜젝션이 끝나더라도 Lazy 로딩을 위해 커넥션을 반환하지 않음 -> Response 가 반환될때 커넥션을 반환
        # - 커넥션 리소스가 모자랄 수 있음

        #OSIV 가 false 인 경우
        # - 트랜젝션이 종료될 때 영속성 컨텍스트를 닫고 DB 커넥션을 반환
        # - 커넥션 리소스를 낭비하지 않음
        # - 지연로딩시 트랜젝션 안에서 처리해야 함
        # - 트랜젝션 후 지연로딩시 Session 이 없다는 에러가 발생
        spring.jpa.open-in-view: true #가급적 false 로 하고 트랜젝션 안에서 지연로딩이 수행되도록 구현

  data:
    web:
      pageable:
        default-page-size: 10
        max-page-size: 2000
        one-indexed-parameters: true
logging:
  #level:
    #org.hibernate.SQL: debug
    #SQL에 바인딩되는 파라미터 로깅
    #org.hibernate.type: trace